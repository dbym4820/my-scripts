#/bin/sh
# テキストファイルに書いた文章を音声ファイル化するスクリプト
# open_jtalk, ffmpeg, soxに依存している

function create_silent_wav(){
    # 無声の音声データを生成
    
    fs=48000 # サンプリング周波数
    len=2    # 時間長（秒）

    outputfilename=$1"_01_silent.wav" # 出力ファイルの名前（第１引数に受け取る）

    temp=`mktemp ./XXXX.raw` # 一時ファイルの生成
    dd if=/dev/zero of=${temp} count=`expr ${fs}` bs=${len} > /dev/null 2>&1 # ファイルサイズ設定
    ffmpeg -loglevel quiet -y -f s16le -ar ${fs} -ac 1 -i ${temp} ${outputfilename} > /dev/null 2>&1 # 無音音声ファイル生成
    rm ${temp} # 一時ファイル削除
}

function split_text_line(){
    # テキストファイルを１行ごとに分割して個別ファイル化
    
    INPUT_FILE=$1   # 入力ファイル（第１引数）
    #OUTPUT_FILE=$2 # 出力ファイル（第２引数）
    OUTPUT_FILE_PREFIX=""  # 出力ファイルのプレフィクス
    OUTPUT_FILE_EXT="" # 出力ファイルの拡張子 デバッグのときは，.txtとかにする

    TARGET_FILE=$1"_tmp"
    sed '/^$/d' $INPUT_FILE > $TARGET_FILE

    SPLITTED_TEXT_DIRECTORY="splited_texts" # 分割後ファイルの生成ディレクトリ
    if [ -e $TARGET_FILE ]; then
        mkdir -p $SPLITTED_TEXT_DIRECTORY   # 分割後ファイルの生成ディレクトリの生成
    fi

    x=5000 # ソートしたときに，1の次に10，その次に100ときて，次に2とくる構造をやめるために十分に大きい値から始める
           # ファイルディスクリプタは256とかしか無いから，5000個以上のファイルが来る想定は不要
    while read line;do
          x=$(($x+1))                   # ファイル（テキストの行）番号の設定
          ofn=${OUTPUT_FILE_PREFIX}${x}${OUTPUT_FILE_EXT}  # 生成する１行分のテキストファイルの名前（あとで順に構成するために行番号名）
          cd ${SPLITTED_TEXT_DIRECTORY}
          echo $line > ${ofn}           # １行分のテキストファイル生成
          cd ..
    done < $TARGET_FILE
    rm $TARGET_FILE
}

function jtalk(){
    # OpenJtalkを使って，テキストファイルから音声合成    
    mkdir -p ./wav # 音声合成後のファイルを置くディレクトリの生成
    new_voice_file=./wav/$1_00_voice.wav
    open_jtalk -s 48000 -x /opt/homebrew/Cellar/open-jtalk/1.11/dic -m /opt/homebrew/Cellar/open-jtalk/1.11/voice/mei/mei_normal.htsvoice -ow $new_voice_file $1 > /dev/null 2>&1 # 音声合成
}

function jtalk_directory_converter(){
    # プログレスバー用
    count=0
    for file in `\find . -maxdepth 1 -type f -not -name '.DS_Store' -not -name '*.wav'`; do # プログレスバー用に，変換すべきテキストの行数（ファイル数）をチェック
        ((count+=1))
    done

    progress_count=1
    # ディレクトリ以下のすべてのファイルをテキストとみなして音声合成
    for file in `\find . -maxdepth 1 -type f -not -name '.DS_Store' -not -name '*.wav'`; do # ディレクトリ以下のすべてのファイルをテキストとみなして，Jtalkで音声合成

        # progress bar
        BAR="$(yes '#' | head -n ${progress_count} | tr -d '\n')"
        printf "\r[%4d/%4d] %s" $progress_count $count ${BAR}

        jtalk $file # 音声合成
        create_silent_wav ./wav/$file # 最終的に１行ごとに音声間に間を開けるために，テキスト１行分の音声と一緒に無音ファイルを生成

        ((progress_count+=1))
    done
    cd ./wav

    i=5000 # ソートしたときに，1の次に10，その次に100ときて，次に2とくる構造をやめるために十分に大きい値から始める
    for file in `\find . -name '*.wav' -maxdepth 1 -type f -not -name '.DS_Store' | sort`; do # 生成した合成音声＋無音ファイルを一覧し，全部ひっくるめて順序化
        ((i+=1))
        mv $file $i".wav" # ファイルの順番にリネーム
    done
    cd ..
    echo ""
}


function text_to_audio_function(){
    # ターゲットとなるテキストファイルを１つ引数にとってこれを実行すれば，そのテキストを音声に変換したファイルが生成される
    echo "Start: converting text to audio"
    
    mkdir /tmp/text-to-audio # 作業用テンポラリディレクトリ作成
    cp $1/$2 /tmp/text-to-audio/$2 # 作業対象ファイルの移動

    cd /tmp/text-to-audio
    
    split_text_line $2 # テキストファイルの分割
    cd splited_texts
    jtalk_directory_converter && mv ./wav ../wav # 全ファイル音声合成
    cd ../wav

    # 結合
    count=$((`ls | wc -w`))
    for file in `\find . -name '*.wav' -maxdepth 1 -type f -not -name '.DS_Store' | sort`; do
        cmd_arg=$cmd_arg" "$file
    done
    cmd_pref='sox '
    cmd_suf=' ../tmp_output.wav'
    cmd=$cmd_pref$cmd_arg$cmd_suf
    eval $cmd
    sox ../tmp_output.wav ../output.wav tempo 1.3

    # 後処理
    cd ..
    rm -r ./splited_texts ./wav

    mv /tmp/text-to-audio/output.wav $1/$2.wav 
    rm -r /tmp/text-to-audio

    echo "Completed: converting text to audio file into "$1"/"$2".wav"
}

if [ -e /tmp/text-to-audio ]; then
    rm -R /tmp/text-to-audio
fi

text_to_audio_function `pwd` $1

